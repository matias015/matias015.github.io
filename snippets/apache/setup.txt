Instalar apache2

Habilitar modulos comunes

Configurar firewall

Configurar virtual host:

    Podemos desactivar los vhost y setear un valor de DocumentRoot
    y asi simplemente hacer que apache sirva cualquier cosa dentro de una carpeta

    Pero podemos usar vhost, que son archivos donde se definen configuraciones de los diferentes sitios

    es similar a tener un json que diga:

    [
        {
            'port': 80,
            'serverName': www.miapp.com
            'documentRoot': /opt/apps/miapp
        },{
            'port': 433,
            'serverName': www.miapp.com,
            'documentRoot': /opt/apps/miapp,
            'SSLEngine': true,
            'SSLCertificate': /etc/...
        },{
            'port': 80,
            'serverName': other.miapp.com
            'documentRoot': /opt/apps/miotherapp
        },
        
    ]

    entonces asi podemos tener configuraciones que digan, depende la url sirve esta configuracion.


    
    Estos vhost se configuran en /etc/apache2/sites-available y por lo general, al instalar apache2, ya se instala uno por defecto

    /etc/apache2/sites-available/000-default.conf

    <VirtualHost *:80>
        #ServerName mi.app.com
        DocumentRoot /opt/my/apps

        ErrorLog ${APACHE_LOG_DIR}/miapp1_error.log
        CustomLog ${APACHE_LOG_DIR}/miapp1_access.log combined
    </VirtualHost>

    si no seteamos server name, este vhost actual como fallback, es decir, si ninguno matchea usa este.
    Solo con esta conf default, ya podemos acceder a la app mediante ip/myapp o mi.dominio.com/myapp




    Si tengo varios sitios, por ejemplo, en /opt/mysites/... y no quiero estar especificandoo en la url a cual acceder
    por ejemploo misite.com/myapp1 o misite.com/myapp2, o simplemente no quieroo que misite.com sirva como un acceso al root de todos los proyectos
    podemos usar vhost

    supongamos que crearemos el acceso en myapp1.misite.com, y myapp2.misite.com o incluso si tuvieramos 2 dominios apuntando al mismo server

    Creariamos en /etc/apache2/sites-available/ un archivo 'myapp1.misite.com.conf' y meteriamos esto:

    <VirtualHost *:80>
        ServerName myapp1.misite.com
        DocumentRoot /opt/mysites/myapp1

        <Directory /opt/mysites/myapp1>
            Options Indexes FollowSymLinks
            AllowOverride All
            Require all granted
        </Directory>

        ErrorLog ${APACHE_LOG_DIR}/miapp1_error.log
        CustomLog ${APACHE_LOG_DIR}/miapp1_access.log combined
    </VirtualHost>

    El tag directory sirve para definir propiedades de acceso, si no lo usamos, obtendremos un forbiden y acceso no permitido al ingresar.

    Aun no podemos acceder a myapp1.misite.com, primero debemos habilitarlo.
    Para ello colocaremos el archivo de conf en el directorio /etc/apache2/sites-enabled/
    Aunque no moveremos el archivo ni haremos una copia, sino que haremos un enlace simbolico

    Podemos hacerlo con un comando de apache
        $ sudo a2ensite myapp1.misite.com.conf

    Luego al hacer reload o restart al servicio de apache podremos acceder. Lo mismo seria con myapp2.misite.com.conf




    Haciendo esto podremos:

        - Acceder a app1 mediante myapp1.misite.com
        - Acceder a app2 mediante myapp2.misite.com
        - Acceder a /opt/mysites accediendo con la ip del servidor, ya que no matcheara con ningun server name y caera en el 000-default
    
    Si queremos acceder a algun sitio usando la ip, por ejemplo 53.133.39.133/myapp1, en versiones modernas no podremos por no tener permisos.

    esto se debe a una configuracion de apache en /etc/apache2/apache2.conf

    <Directory />
        AllowOverride None
        Require all denied
    </Directory>

    simplemente debemos agregar a nuestro archivo 000-default.conf el permiso a dichas carpetas:

    <Directory /opt/mysites/app1>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    y
    
    <Directory /opt/mysites/app2>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    Tambien se podria a√±adir al archivo apache2.conf esta linea, aunque no es recomendable

    <Directory /opt>
        Require all granted
    </Directory>


Puertos

    Si queremos usar puertos diferentes al 80 y 433 debemos modificar el /etc/apache2/ports.conf y agregar:

        Listen 8080
        Listen 9090


PHP

Modulos

    Si usamos phpinfo podremos encontrar 2 valores importantes

        - Loaded Configuration File: que es el archivo php.ini que se esta usando, por ej /etc/php/7.4/apache2/php.ini 
        - extension_dir: es el directorio donde estan las extensiones .so o .dll de, suele ser algo como: php/usr/lib/php/20190902

    Si queremos instalar una extension nueva, 
    debemos obtener los .so o .dll de ella, 
    montarla en ese directorio
    y activarla en .ini con extension=nombre_archivo_ext.so

    Tambien hay otro directorio donde se pueden cargar modulos, aunque es menos comun, 
    solo preocurar que no funcionen ambos a la vez y no cargar modulos 2 veces